# SPDX-License-Identifier: Apache-2.0
# Copyright 2023 Canonical Ltd.

name: Master workflow

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
  repository_dispatch:
    types: [trigger-workflow]

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4.0.0
        with:
          version: latest
          args: -v --config ./.golangci.yml

  license-check:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: reuse lint
        uses: fsfe/reuse-action@v2

  fossa-check:
    runs-on: ubuntu-latest
    needs: license-check
    steps:
      - uses: actions/checkout@v4

      - name: FOSSA scan
        uses: fossa-contrib/fossa-action@v3
        with:
          fossa-api-key: 0c3bbcdf20e157bbd487dae173751b28
          
  build:
    runs-on: ubuntu-latest
    needs: fossa-check
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Build
        run: go build

  unit-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Unit tests
        run: go test ./...
        
  docker-build:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          #go-version: '1.17'  # Replace with your Go version if necessary
          go-version-file: 'go.mod'
          
      - name: Build Docker image
        run: docker build -t ios5g/nas:latest .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.PASSWORD }}" | docker login -u "${{ secrets.USERNAME }}" --password-stdin

      - name: Tag Docker image
        run: docker tag nas:latest ios5g/nas

      - name: Push Docker image to Docker Hub
        run: docker push ios5g/nas

